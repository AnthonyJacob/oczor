infixl + 6 addInt
-
StmtF StmtOperator
=
ffi add : (Int, Int) => Int
infixl + 6 add
1 + 2
-
RecordF [FfiF "add" (TypeFuncF (TypeRecordF [TypeIdentF "Int",TypeIdentF "Int"]) (TypeIdentF "Int")),StmtF StmtOperator,CallF (IdentF "add") (RecordF [LitF (LitInt 1),LitF (LitInt 2)])]
=
ffi mul : (Int, Int) => Int
ffi add : (Int, Int) => Int
infixl + 6 add
infixl * 7 mul
1 + 2 * 3
-
RecordF [FfiF "mul" (TypeFuncF (TypeRecordF [TypeIdentF "Int",TypeIdentF "Int"]) (TypeIdentF "Int")),FfiF "add" (TypeFuncF (TypeRecordF [TypeIdentF "Int",TypeIdentF "Int"]) (TypeIdentF "Int")),StmtF StmtOperator,StmtF StmtOperator,CallF (IdentF "add") (RecordF [LitF (LitInt 1),CallF (IdentF "mul") (RecordF [LitF (LitInt 2),LitF (LitInt 3)])])]
=
(1) # foo
-
CallF (IdentF "foo") (LitF (LitInt 1))
=
infixl + 6 add
infixl ++ 5 add
1 ++ 2
-
RecordF [StmtF StmtOperator,StmtF StmtOperator,CallF (IdentF "add") (RecordF [LitF (LitInt 1),LitF (LitInt 2)])]
=
infix == 4 eq

y = x == 2
-
RecordF [StmtF StmtOperator,RecordLabelF "y" (CallF (IdentF "eq") (RecordF [IdentF "x",LitF (LitInt 2)]))]